name: Build & Release (Windows MSI)

on:
  push:
    branches: ["main"]
    tags: ["v*", "*"]
  workflow_dispatch:
    inputs:
      version:
        description: "Release version when run manually"
        required: true
        default: "1"

permissions:
  contents: write

jobs:
  msi:
    runs-on: windows-latest
    env:
      RELEASE_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || inputs.version }}

    steps:
    - uses: actions/checkout@v4

    # 1. Set up MSBuild / VS toolchain
    - uses: microsoft/setup-msbuild@v1.1

    # 2. Build your program (CMake shown; swap for Cargo, etc.)
    - name: Build gcode_gen.exe
      shell: pwsh
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release

    # Ensure output directory exists for the installer
    - name: Prepare dist folder
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Path dist -Force | Out-Null

    # 3. Install WiX v4 CLI (candle/light combined into `wix.exe build`)
    - name: Install WiX Toolset
      shell: pwsh
      run: |
        dotnet tool install --global wix

    # 4. Compile installer
    - name: Build MSI
      shell: pwsh
      run: |
        wix build wix/installer.wxs `
                 -arch x64 `
                 -o dist/gcode_gen-${{ env.RELEASE_VERSION }}-x64.msi

    # 5. Create or update the GitHub Release
    - name: Create Release
      id: release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        name: ${{ env.RELEASE_VERSION }}
        generate_release_notes: true

    # 6. Upload the MSI asset
    - name: Upload MSI
      uses: softprops/action-gh-release@v2
      with:
        files: dist/gcode_gen-${{ env.RELEASE_VERSION }}-x64.msi
